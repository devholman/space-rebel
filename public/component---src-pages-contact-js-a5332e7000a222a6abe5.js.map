{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/FormText.js","webpack:///./src/pages/contact.js"],"names":["window","require","Layout","children","data","Nav","siteTitle","site","siteMetadata","title","Contact","React","useState","state","setState","handleChange","e","target","name","value","className","method","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","type","hidden","onChange","required","autoComplete","email","message","cols","rows","ContactForm"],"mappings":"qJAWsB,oBAAXA,QAETC,EAAQ,OAARA,CAAyB,gBAG3B,IA4BeC,EA5BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OASV,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,UAAWF,EAAKG,KAAKC,aAAaC,QACvC,8BAAON,K,0ECpBE,SAASO,IAAW,IAAD,EACNC,IAAMC,SAAS,IAAlCC,EADyB,KAClBC,EADkB,KAG1BC,EAAe,SAACC,GAAO,IAAD,EAC1BF,EAAS,OAAD,wBAAMD,GAAN,WAAcG,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,MAAvC,MAkBV,OACE,yBAAKC,UAAU,2BACb,wBAAIA,UAAU,2BAAd,0EAGA,0BACEF,KAAK,UACLG,OAAO,OACPC,eAAa,OACbC,wBAAsB,YACtBC,SAzBe,SAACR,GACpBA,EAAES,iBACF,IAfYrB,EAeNsB,EAAOV,EAAEC,OACfU,MAAM,IAAK,CACTN,OAAQ,OACRO,QAAS,CAAE,eAAgB,qCAC3BC,MAnBUzB,EAmBG,OAAD,QACV,YAAasB,EAAKI,aAAa,SAC5BjB,GApBFkB,OAAOC,KAAK5B,GAChB6B,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmB/B,EAAK8B,OACrEE,KAAK,QAqBHC,MAAK,kBAAMC,mBAASZ,EAAKI,aAAa,cACtCS,OAAM,SAACC,GAAD,OAAWC,MAAMD,OActBpB,UAAU,2BAGV,2BAAOsB,KAAK,SAASxB,KAAK,YAAYC,MAAM,YAC5C,uBAAGwB,QAAM,GACP,sDAEE,2BAAOzB,KAAK,YAAY0B,SAAU7B,MAGtC,uBAAGK,UAAU,oEACX,2BAAOA,UAAU,eAAjB,kBAEE,6BACA,2BACEA,UAAU,+GACVsB,KAAK,OACLxB,KAAK,OACL2B,UAAU,EACVC,aAAa,MACbF,SAAU7B,EACVI,MAAON,EAAMK,MAAQ,OAK3B,uBAAGE,UAAU,oEACX,2BAAOA,UAAU,eAAjB,cAEE,6BACA,2BACEsB,KAAK,QACLxB,KAAK,QACL0B,SAAU7B,EACVI,MAAON,EAAMkC,OAAS,GACtBD,aAAa,MACbD,UAAU,EACVzB,UAAU,mHAIhB,uBAAGA,UAAU,+DACX,2BAAOA,UAAU,eAAjB,WAEE,6BACA,8BACEF,KAAK,UACL0B,SAAU7B,EACVI,MAAON,EAAMmC,SAAW,GACxBF,aAAa,MACbD,UAAU,EACVI,KAAK,KACLC,KAAK,IACL9B,UAAU,oHAIhB,uBAAGA,UAAU,QACX,4BACEA,UAAU,+GACVsB,KAAK,UAFP,WCxFKS,UAPK,kBAClB,kBAAC,EAAD,KACE,yBAAK/B,UAAU,yCACb,kBAAC,EAAD,U","file":"component---src-pages-contact-js-a5332e7000a222a6abe5.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Nav from './Nav';\nif (typeof window !== 'undefined') {\n  // eslint-disable-next-line global-require\n  require('smooth-scroll')('a[href*=\"#\"]');\n}\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query siteTitleQueryAndSiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Nav siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n\n      {/* <footer className=\"\">\n        © {new Date().getFullYear()}, Built with Love\n        {` `}\n        <Link to=\"#\">Space Rebel</Link>\n      </footer> */}\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { navigate } from 'gatsby-link';\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&');\n}\n\nexport default function Contact() {\n  const [state, setState] = React.useState({});\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <div className=\"flex flex-col p-8 my-20\">\n      <h1 className=\"text-white text-lg mb-8\">\n        Tell us about your mission and we'll reach out to you within 24 hours.\n      </h1>\n      <form\n        name=\"contact\"\n        method=\"post\"\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot-field\"\n        onSubmit={handleSubmit}\n        className=\"text-white max-w-sm m-4\"\n      >\n        {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <p hidden>\n          <label>\n            Don’t fill this out:\n            <input name=\"bot-field\" onChange={handleChange} />\n          </label>\n        </p>\n        <p className=\"flex items-center border-b border-b-2 border-sr-blue-1 py-2 mb-4\">\n          <label className=\"font-medium\">\n            Your full name:\n            <br />\n            <input\n              className=\"appearance-none text-white bg-transparent border-none w-full mr-3 py-1 px-2 leading-tight focus:outline-none\"\n              type=\"text\"\n              name=\"name\"\n              required={true}\n              autoComplete=\"off\"\n              onChange={handleChange}\n              value={state.name || ''}\n            />\n          </label>\n        </p>\n\n        <p className=\"flex items-center border-b border-b-2 border-sr-blue-1 py-2 mb-4\">\n          <label className=\"font-medium\">\n            Your email:\n            <br />\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={state.email || ''}\n              autoComplete=\"off\"\n              required={true}\n              className=\"appearance-none bg-transparent border-none w-full mr-3 py-1 px-2 leading-tight font-light focus:outline-none\"\n            />\n          </label>\n        </p>\n        <p className=\"flex items-center border-b border-b-2 border-sr-blue-1 py-2\">\n          <label className=\"font-medium\">\n            Message:\n            <br />\n            <textarea\n              name=\"message\"\n              onChange={handleChange}\n              value={state.message || ''}\n              autoComplete=\"off\"\n              required={true}\n              cols=\"50\"\n              rows=\"4\"\n              className=\"appearance-none bg-transparent border-none w-full mr-3 py-1 px-2 resize-none leading-tight focus:outline-none\"\n            />\n          </label>\n        </p>\n        <p className=\"my-6\">\n          <button\n            className=\"flex-shrink-0 bg-sr-blue-1 hover:bg-sr-blue-1 border-sr-blue-1 text-sm border-4 text-white py-1 px-2 rounded\"\n            type=\"submit\"\n          >\n            Send\n          </button>\n        </p>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport Layout from '../components/Layout';\n\nimport FormText from '../components/FormText';\n\nconst ContactForm = () => (\n  <Layout>\n    <div className=\"bg-black flex justify-center h-screen\">\n      <FormText />\n    </div>\n  </Layout>\n);\nexport default ContactForm;\n"],"sourceRoot":""}