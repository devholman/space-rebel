{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/FormText.js","webpack:///./src/pages/contact.js"],"names":["window","require","Layout","children","data","Nav","siteTitle","site","siteMetadata","title","INITIAL_STATE","name","email","message","status","reducer","redState","action","type","field","value","Contact","React","useState","state","setState","useReducer","dispatch","handleChange","e","target","className","to","method","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","response","catch","error","alert","hidden","onChange","required","autoComplete","cols","rows","ContactForm"],"mappings":"qJAWsB,oBAAXA,QAETC,EAAQ,OAARA,CAAyB,gBAG3B,IA4BeC,EA5BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OASV,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,UAAWF,EAAKG,KAAKC,aAAaC,QACvC,8BAAON,K,oFCzBPO,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,OAAQ,QASV,IAAMC,EAAU,SAACC,EAAUC,GAAY,IAAD,EAClC,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAO,OAAP,wBAAYF,GAAZ,WAAuBC,EAAOE,OAAQF,EAAOG,MAA7C,IACF,IAAK,eACH,OAAO,OAAP,wBAAYJ,GAAZ,IAAsBF,OAAQG,EAAOH,SACvC,IAAK,QACL,QACE,OAAOJ,IAIA,SAASW,IAAW,IAAD,EACNC,IAAMC,SAAS,IAAlCC,EADyB,KAClBC,EADkB,OAEHH,IAAMI,WAAWX,EAASL,GAAhDM,EAFyB,KAEfW,EAFe,KAI1BC,EAAe,SAACC,GAAO,IAAD,EAC1BJ,EAAS,OAAD,wBAAMD,GAAN,WAAcK,EAAEC,OAAOnB,MAAOkB,EAAEC,OAAOV,MAAvC,MAuBV,MAAwB,YAApBJ,EAASF,OAEP,yBAAKiB,UAAU,iBACX,uBAAGA,UAAU,0DAAb,oBAGA,6BACA,uBAAGA,UAAU,gBACT,kBAAC,IAAD,CACAC,GAAE,IACFD,UAAU,kCAFV,wBAYZ,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,2BAAd,0EAGA,0BACEpB,KAAK,UACLsB,OAAO,OACPC,eAAa,OACbC,wBAAsB,YACtBC,SA9Ce,SAACP,GACpBA,EAAEQ,iBACF,IA/BYjC,EA+BNkC,EAAOT,EAAEC,OACfS,MAAM,IAAK,CACTN,OAAQ,OACRO,QAAS,CAAE,eAAgB,qCAC3BC,MAnCUrC,EAmCG,OAAD,QACV,YAAakC,EAAKI,aAAa,SAC5BlB,GApCFmB,OAAOC,KAAKxC,GAChByC,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmB3C,EAAK0C,OACrEE,KAAK,QAsCHC,MAAK,SAAAC,GAdRvB,EAAS,CAAET,KAAM,eAAgBJ,OAejB,eAEbqC,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAgCtBrB,UAAU,2BAGV,2BAAOb,KAAK,SAASP,KAAK,YAAYS,MAAM,YAC5C,uBAAGkC,QAAM,GACP,sDAEE,2BAAO3C,KAAK,YAAY4C,SAAU3B,MAGtC,uBAAGG,UAAU,oEACX,2BAAOA,UAAU,eAAjB,kBAEE,6BACA,2BACEA,UAAU,+GACVb,KAAK,OACLP,KAAK,OACL6C,UAAU,EACVC,aAAa,MACbF,SAAU3B,EACVR,MAAOI,EAAMb,MAAQ,OAK3B,uBAAGoB,UAAU,oEACX,2BAAOA,UAAU,eAAjB,cAEE,6BACA,2BACEb,KAAK,QACLP,KAAK,QACL4C,SAAU3B,EACVR,MAAOI,EAAMZ,OAAS,GACtB6C,aAAa,MACbD,UAAU,EACVzB,UAAU,mHAIhB,uBAAGA,UAAU,+DACX,2BAAOA,UAAU,eAAjB,WAEE,6BACA,8BACEpB,KAAK,UACL4C,SAAU3B,EACVR,MAAOI,EAAMX,SAAW,GACxB4C,aAAa,MACbD,UAAU,EACVE,KAAK,KACLC,KAAK,IACL5B,UAAU,oHAIhB,uBAAGA,UAAU,QACX,4BACEA,UAAU,+GACVb,KAAK,UAFP,WCrIK0C,UAPK,kBAClB,kBAAC,EAAD,KACE,yBAAK7B,UAAU,yCACb,kBAAC,EAAD,U","file":"component---src-pages-contact-js-c2a1fbff2e57ecf3b9c9.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Nav from './Nav';\nif (typeof window !== 'undefined') {\n  // eslint-disable-next-line global-require\n  require('smooth-scroll')('a[href*=\"#\"]');\n}\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query siteTitleQueryAndSiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Nav siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n\n      {/* <footer className=\"\">\n        © {new Date().getFullYear()}, Built with Love\n        {` `}\n        <Link to=\"#\">Space Rebel</Link>\n      </footer> */}\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { navigate } from 'gatsby-link';\nimport { Link } from 'gatsby';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  message: '',\n  status: 'IDLE',\n};\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&');\n}\n\nconst reducer = (redState, action) => {\n    switch (action.type) {\n      case 'updatedFieldValue':\n        return { ...redState, [action.field]: action.value };\n      case 'updateStatus':\n        return { ...redState, status: action.status };\n      case 'reset':\n      default:\n        return INITIAL_STATE;\n    }\n  };\n\nexport default function Contact() {\n  const [state, setState] = React.useState({});\n  const [redState, dispatch] = React.useReducer(reducer, INITIAL_STATE);\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\nconst setStatus = (status) => {\n    dispatch({ type: 'updateStatus', status })\n}\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n    //   .then(() => navigate(form.getAttribute('action')))\n      .then(response => {\n          setStatus('SUCCESS')\n      })\n      .catch((error) => alert(error));\n  };\n  if (redState.status === 'SUCCESS') {\n    return (\n        <div className=\"flex flex-col\">\n            <p className=\"text-white font-bold text-secondary mt-32 mb-0 mx-auto\">\n                Message Received\n            </p>\n            <br></br>\n            <p className=\" mt-2 m-auto\">\n                <Link\n                to={`/`}\n                className='text-sr-blue-1 hover:underline'\n            >\n                Retrun to homepage\n            </Link>\n            </p>\n            \n      </div>\n    );\n  }\n  return (\n    <div className=\"flex flex-col p-8 my-20\">\n      <h1 className=\"text-white text-lg mb-8\">\n        Tell us about your mission and we'll reach out to you within 24 hours.\n      </h1>\n      <form\n        name=\"contact\"\n        method=\"post\"\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot-field\"\n        onSubmit={handleSubmit}\n        className=\"text-white max-w-sm m-4\"\n      >\n        {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <p hidden>\n          <label>\n            Don’t fill this out:\n            <input name=\"bot-field\" onChange={handleChange} />\n          </label>\n        </p>\n        <p className=\"flex items-center border-b border-b-2 border-sr-blue-1 py-2 mb-4\">\n          <label className=\"font-medium\">\n            Your full name:\n            <br />\n            <input\n              className=\"appearance-none text-white bg-transparent border-none w-full mr-3 py-1 px-2 leading-tight focus:outline-none\"\n              type=\"text\"\n              name=\"name\"\n              required={true}\n              autoComplete=\"off\"\n              onChange={handleChange}\n              value={state.name || ''}\n            />\n          </label>\n        </p>\n\n        <p className=\"flex items-center border-b border-b-2 border-sr-blue-1 py-2 mb-4\">\n          <label className=\"font-medium\">\n            Your email:\n            <br />\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={state.email || ''}\n              autoComplete=\"off\"\n              required={true}\n              className=\"appearance-none bg-transparent border-none w-full mr-3 py-1 px-2 leading-tight font-light focus:outline-none\"\n            />\n          </label>\n        </p>\n        <p className=\"flex items-center border-b border-b-2 border-sr-blue-1 py-2\">\n          <label className=\"font-medium\">\n            Message:\n            <br />\n            <textarea\n              name=\"message\"\n              onChange={handleChange}\n              value={state.message || ''}\n              autoComplete=\"off\"\n              required={true}\n              cols=\"50\"\n              rows=\"4\"\n              className=\"appearance-none bg-transparent border-none w-full mr-3 py-1 px-2 resize-none leading-tight focus:outline-none\"\n            />\n          </label>\n        </p>\n        <p className=\"my-6\">\n          <button\n            className=\"flex-shrink-0 bg-sr-blue-1 hover:bg-sr-blue-1 border-sr-blue-1 text-sm border-4 text-white py-1 px-2 rounded\"\n            type=\"submit\"\n          >\n            Send\n          </button>\n        </p>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport Layout from '../components/Layout';\n\nimport FormText from '../components/FormText';\n\nconst ContactForm = () => (\n  <Layout>\n    <div className=\"bg-black flex justify-center h-screen\">\n      <FormText />\n    </div>\n  </Layout>\n);\nexport default ContactForm;\n"],"sourceRoot":""}